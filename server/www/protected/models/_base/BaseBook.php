<?php

/**
 * This is the model base class for the table "book".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Book".
 *
 * Columns in table "book" available as properties of the model,
 * followed by relations of table "book" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $author
 * @property integer $word_count
 * @property string $date_published
 * @property integer $genre
 * @property string $cover_img
 *
 * @property Author $author0
 * @property Genre $genre0
 * @property Series[] $series
 */
abstract class BaseBook extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'book';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Book|Books', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name', 'required'),
			array('author, word_count, genre', 'numerical', 'integerOnly'=>true),
			array('name, cover_img', 'length', 'max'=>255),
			array('date_published', 'safe'),
			array('author, word_count, date_published, genre, cover_img', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, author, word_count, date_published, genre, cover_img', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'author0' => array(self::BELONGS_TO, 'Author', 'author'),
			'genre0' => array(self::BELONGS_TO, 'Genre', 'genre'),
			'series' => array(self::MANY_MANY, 'Series', 'book_series(book_id, series_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'series' => 'BookSeries',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'author' => null,
			'word_count' => Yii::t('app', 'Word Count'),
			'date_published' => Yii::t('app', 'Date Published'),
			'genre' => null,
			'cover_img' => Yii::t('app', 'Cover Img'),
			'author0' => null,
			'genre0' => null,
			'series' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('author', $this->author);
		$criteria->compare('word_count', $this->word_count);
		$criteria->compare('date_published', $this->date_published, true);
		$criteria->compare('genre', $this->genre);
		$criteria->compare('cover_img', $this->cover_img, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}